<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Samma.io</title>
    <link>https://samma.io/</link>
    <description>Recent content in Home on Samma.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Nov 2021 09:00:00 +0000</lastBuildDate><atom:link href="https://samma.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scan your app</title>
      <link>https://samma.io/posts/2021-11-30-devs-scan-your-app/</link>
      <pubDate>Tue, 30 Nov 2021 09:00:00 +0000</pubDate>
      
      <guid>https://samma.io/posts/2021-11-30-devs-scan-your-app/</guid>
      <description>Scan your app before first commit ! #devsecops </description>
    </item>
    
    <item>
      <title>For Pentesters</title>
      <link>https://samma.io/posts/2021-09-21-for-pentesters/</link>
      <pubDate>Tue, 21 Sep 2021 09:00:00 +0000</pubDate>
      
      <guid>https://samma.io/posts/2021-09-21-for-pentesters/</guid>
      <description>How I use the samma scanners to do recon when pentesting I was tasked to do a first pentest against an AWS-hosted environment. This was an automated test to run before a more advanced pentest was planned. And the goal was to do a quick scan of the assets to catch any low-fruits targets and then be able to resolve them before the larger pentest was conducted.
The setup To use as a base for the scanners a deployed a minikube Kubernetes on my local desktop.</description>
    </item>
    
    <item>
      <title>Find security problems early</title>
      <link>https://samma.io/posts/2021-07-11-find-secrity-problesm-early/</link>
      <pubDate>Sun, 11 Jul 2021 09:00:00 +0000</pubDate>
      
      <guid>https://samma.io/posts/2021-07-11-find-secrity-problesm-early/</guid>
      <description>Before 1.7.0_06, String has 4 non static field:
 char[] value int[] offset int count int hash  Subing.substring create a String by sharing the original String&amp;rsquo;s internal char[] value and setting offset. This saves memory and makes String.substring run in a constant time($O(1)$). Meanwhile, this feature may cause memory leak1.
http://hg.openjdk.java.net/jdk6/jdk6/jdk/file/8deef18bb749/src/share/classes/java/lang/String.java
public final class String implements java.io.Serializable, Comparable&amp;lt;String&amp;gt;, CharSequence { /** The value is used for character storage. */ private final char value[]; /** The offset is the first index of the storage that is used.</description>
    </item>
    
    <item>
      <title>Keep Your AWS service secure</title>
      <link>https://samma.io/posts/2011-06-02-keep-your-aws-secure/</link>
      <pubDate>Wed, 02 Jun 2021 09:00:00 +0000</pubDate>
      
      <guid>https://samma.io/posts/2011-06-02-keep-your-aws-secure/</guid>
      <description>Before 1.7.0_06, String has 4 non static field:
 char[] value int[] offset int count int hash  Subing.substring create a String by sharing the original String&amp;rsquo;s internal char[] value and setting offset. This saves memory and makes String.substring run in a constant time($O(1)$). Meanwhile, this feature may cause memory leak1.
http://hg.openjdk.java.net/jdk6/jdk6/jdk/file/8deef18bb749/src/share/classes/java/lang/String.java
public final class String implements java.io.Serializable, Comparable&amp;lt;String&amp;gt;, CharSequence { /** The value is used for character storage. */ private final char value[]; /** The offset is the first index of the storage that is used.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://samma.io/about/</link>
      <pubDate>Wed, 24 Aug 2016 17:51:42 +0000</pubDate>
      
      <guid>https://samma.io/about/</guid>
      <description>Github: monkeyWzr</description>
    </item>
    
    <item>
      <title>Scanners</title>
      <link>https://samma.io/scanners/</link>
      <pubDate>Wed, 24 Aug 2016 17:51:42 +0000</pubDate>
      
      <guid>https://samma.io/scanners/</guid>
      <description>Samma Security Scanners Samma Scanners is a set of our most used open-source scanners. They are set ut side by side and used to scan our targets. The result is then parsed and output as JSON into stout ore with filebeat to elasticsearch. The result is then monitored and searched with grafana och kibana
Find and Deploy, Scan output, and Monitor Samma Scanner is built up of different parts, all the parts together form the samma scanner stack.</description>
    </item>
    
    <item>
      <title>Support and Traning</title>
      <link>https://samma.io/support/</link>
      <pubDate>Wed, 24 Aug 2016 17:51:42 +0000</pubDate>
      
      <guid>https://samma.io/support/</guid>
      <description>Support We offer with our compaines proffesinal help in bort cosulting for setting upp scanners to run as singel ore to intgreat with you pipline.
Hosting With ur partners you cna get e full Samma scanner cloud setup to scan all of your targets and store your data on the partners hardaware This iclude
Pipeline Conulting help to integrate samma scanners into your pipeline to keep scans uptodate and keep your apps secure</description>
    </item>
    
  </channel>
</rss>
